 <!-- By Robert Matteau -->
 <!-- Febuary 8th, 2017 -->
 <!-- Heruko Cloud Assignment-->

 <!-- map sizing-->
 <style>
      #map{
          height: 400px;
          width: 100%;
      }
      </style>

<input id="pac-input" class="controls" type="text" placeholder="Search Box">
    <div id="map"></div>
    <script>
      <!-- google api map creationg with search bar -->

      <!-- autocomplete for location -->
      function initAutocomplete() 
      {
        var map = new google.maps.Map(document.getElementById('map'), {


          center: {lat: -33.8688, lng: 151.2195},
          zoom: 13,
          mapTypeId: 'roadmap'

        });

        <!-- link search bar to ui elemnt -->
        var input = document.getElementById('pac-input');
        var searchBox = new google.maps.places.SearchBox(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        <!-- keep the search results around users area -->
        map.addListener('bounds_changed', function() {
          searchBox.setBounds(map.getBounds());
        });

        var markers = [];
        <!-- listeing for search box -->
        searchBox.addListener('places_changed', function() 
        {
          var places = searchBox.getPlaces();

          if (places.length == 0) 
          {
            return;
          }

          <!-- refress markers -->
          markers.forEach(function(marker) 
          {
            marker.setMap(null);
          });


          markers = [];

         <!-- get icon for destination -->
          var bounds = new google.maps.LatLngBounds();
          places.forEach(function(place) 
          {
            

            if (!place.geometry) 
            {
              console.log("Returned place contains no geometry");
              return;
            }



            var icon = {

              url: place.icon,
              size: new google.maps.Size(71, 71),
              origin: new google.maps.Point(0, 0),
              anchor: new google.maps.Point(17, 34),
              scaledSize: new google.maps.Size(25, 25)


            };

            <!-- creating marker for each place -->
            markers.push(new google.maps.Marker({

              map: map,
              icon: icon,
              title: place.name,
              position: place.geometry.location

            }));

            if (place.geometry.viewport) {

              
              bounds.union(place.geometry.viewport);
            } else 
            {


              bounds.extend(place.geometry.location);
            }


          });


          map.fitBounds(bounds);
        });
      }

    </script>
    <!-- script for access using license key -->
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAwtBfy6z3_ZhqmVP4QTswwACo-8X-VVt8&libraries=places&callback=initAutocomplete"
         async defer></script>